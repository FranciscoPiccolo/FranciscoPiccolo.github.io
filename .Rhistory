xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
head()
q1 %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values, group = gl_product_group_desc))
q1 %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))
q1 %>%
filter(total_gv_count >= 1000) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))
q1 %>%
filter(total_gv_count >= 1000) %>%
dim()
q1 %>%
filter(total_gv_count >= 100) %>%
dim()
q1 %>%
filter(total_gv_count >= 50) %>%
dim()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))+
facet_wrap(~product_family)
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))+
facet_grid(~product_family)
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))+
facet_grid(~product_family)+
coord_flip()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))+
facet_grid(gl_product_group_desc~product_family)+
coord_flip()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))+
facet_wrap(gl_product_group_desc~product_family)+
coord_flip()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values))+
scale_y_continuous(labels = scales::percent)+
facet_wrap(gl_product_group_desc~product_family)+
theme_graph()+
coord_flip()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values), outlier.shape = 20, outlier.alpha = .5)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(gl_product_group_desc~product_family)+
theme_graph()+
coord_flip()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values, fill = metric), outlier.shape = 20, outlier.alpha = .5)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(gl_product_group_desc~product_family)+
theme_graph()+
coord_flip()
q1 %>%
filter(total_gv_count >= 50) %>%
select(asin,
gl_product_group_desc,
product_family,
sp_cluster_gv_count,
cnf1_gv_count,
xbrb_gv_count,
bsb1_gv_count,
poa1_gv_count) %>%
tidyr::gather("metric","values",4:8) %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = metric, y = values, fill = metric), outlier.shape = 20, outlier.alpha = .5)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(gl_product_group_desc~product_family)+
theme_graph()+
theme(legend.position = "none")+
coord_flip()
library(GGally)
library(fpp3)
library(fable)
library(tsibble)
library(tsibbledata)
library(feasts)
library(tidyverse)
library(patchwork)
library(seasonal)
library(fma)
# Função para padronizar o design dos gráficos
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.position = "bottom",
legend.title = element_blank()
)
}
dataset <- readr::read_csv(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/grocery_price_volatility.csv")
readr::read_delim(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-03-01-basic_econometrics_by_gujarati/table_1.3_cpi.txt",
delim = ",")
dataset <- readr::read_delim(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-03-01-basic_econometrics_by_gujarati/table_1.3_cpi.txt",
delim = ",")
dataset
dataset <- readr::read_delim(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/grocery_price_volatility.csv",
delim = ",")
dataset <- readr::read_delim(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-06-20-grocery_price_volatility/dataset_1.csv",
delim = ",")
dataset %>%
head()
dataset %>%
View()
dataset <- readr::read_csv(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-06-20-grocery_price_volatility/dataset_1.csv")
dataset %>%
View()
dataset %>%
head()
dataset %>%
dim()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
dataset$price <- as.numeric(dataset$price)
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
dataset <- readr::read_csv(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-06-20-grocery_price_volatility/dataset_1.csv")
dataset$price <- as.numeric(dataset$price)
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
dataset <- readr::read_csv(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-06-20-grocery_price_volatility/dataset_1.csv")
dataset$price <- as.numeric(dataset$price)
dataset <- readr::read_csv(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-06-20-grocery_price_volatility/dataset_1.csv")
dataset$price <- as.numeric(dataset$price)
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
distinct(product) %>%
dim()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = n()))
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = count(1)))
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = local))
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
head()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = rows))+
coord_flip()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
mutate(product = fct_reorder(product, rows, .desc = T)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = rows))+
coord_flip()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
mutate(product = fct_reorder(product, rows, .desc = T),
product = fct_lump(product, rows, 10)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = rows))+
coord_flip()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
mutate(product = fct_reorder(product, rows, .desc = T),
product = fct_lump(product, 10)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = rows))+
coord_flip()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
head()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
head()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows == 1) %>%
head()
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows == 1) -> low_sample_product
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows <= 3) -> low_sample_product
dataset %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows <= 3) %>%
select(product) -> low_sample_product
low_sample_product
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
head()
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
head()
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = data, y = price_per_vol, group = local))+
facet_wrap(~product)
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = data, y = price_per_vol, group = local))+
facet_wrap(~product, scales = "free_y")
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = data, y = price_per_vol, group = local, color = local))+
scale_color_brewer(type = "qual", palette = 2)+
theme_graph()+
facet_wrap(~product, scales = "free_y")
dataset %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows <= 5) %>%
select(product) -> low_sample_product
```{r, message=F, warning=F}
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = data, y = price_per_vol, group = local, color = local))+
scale_color_brewer(type = "qual", palette = 2)+
theme_graph()+
facet_wrap(~product, scales = "free_y")
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
low_sample_product
dataset %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows <= 5) %>%
select(product) -> low_sample_product
dataset %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows <= 5) %>%
select(product) -> low_sample_product
dataset %>%
filter(!product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
dataset %>%
filter(product %in% c(low_sample_product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
low_sample_product %>% head()
dataset %>%
filter(product %in% c(low_sample_product$product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
View()
dataset %>%
group_by(product) %>%
summarise(rows = n()) %>%
filter(rows <= 3) %>%
select(product) -> low_sample_product
dataset %>%
filter(!product %in% c(low_sample_product$product)) %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = data, y = price_per_vol, group = local, color = local))+
scale_color_brewer(type = "qual", palette = 2)+
theme_graph()+
facet_wrap(~product, scales = "free_y")
dataset <- readr::read_csv(file = "https://raw.githubusercontent.com/FranciscoPiccolo/franciscopiccolo.github.io/master/datasets/2020-06-20-grocery_price_volatility/dataset_1.csv")
dataset$price <- as.numeric(dataset$price)
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
group_by(product) %>%
summarise(rows = n()) %>%
mutate(product = fct_reorder(product, rows, .desc = T),
product = fct_lump(product, 10)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = rows))+
coord_flip()
dataset <-
dataset %>%
filter(!product %in% c(low_sample_product$product))
dataset <-
dataset %>%
mutate(price_per_vol = price/volume_gm_ml) %>%
filter(!product %in% c(low_sample_product$product))
dataset %>%
group_by(product) %>%
summarise(rows = n()) %>%
mutate(product = fct_reorder(product, rows, .desc = T),
product = fct_lump(product, 10)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = product, y = rows))+
coord_flip()
dataset %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = data, y = price_per_vol, group = local, color = local))+
scale_color_brewer(type = "qual", palette = 2)+
theme_graph()+
facet_wrap(~product, scales = "free_y")
dataset %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = product, y = price_per_vol, group = local))
dataset %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = product, y = price_per_vol, group = local, color = local))+
facet_wrap(~local)
dataset %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = local, y = price_per_vol))+
facet_wrap(~product)
dataset %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = local, y = price_per_vol))+
facet_wrap(~product, scales = "free_y")
dataset %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = local, y = price_per_vol))+
facet_wrap(~product, scales = "free_y")+
coord_flip()
dataset %>%
ggplot2::ggplot()+
geom_boxplot(mapping = aes(x = local, y = price_per_vol))+
facet_wrap(~product, scales = "free_x")+
coord_flip()
setwd("C:/Users/fppicco/Desktop/R/Github/franciscopiccolo.github.io")
blogdown::serve_site()
blogdown::serve_site()
table_3.5 <-
data.frame(parcial_test = c(1,3,7,10,9,5,4,8,2,6),
final_test = c(3,2,8,7,9,6,5,10,1,4),
student = c("a","b","c","d","e","f","g","h","i","j"))
table_3.5
cor.test(x = table_3.5$parcial_test,
y = table_3.5$final_test,
method = "spearman")
cor.test(x = table_3.5$parcial_test,
y = table_3.5$final_test,
method = "spearman") %>%
pander::pander()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
