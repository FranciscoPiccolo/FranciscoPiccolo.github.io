facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!ia.na(gl)) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index))+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index))+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index/10.000) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index))+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index/10.000) %>%
head()
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index))+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index/10000) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index))+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index/10000) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index/10000) %>%
head()
q3 %>%
mutate(gl = fct_lump_n(gl, n = 30)) %>%
filter(!gl %in% c("Other"),
!is.na(gl)) %>%
mutate(concentration_index = concentration_index/10000) %>%
select(week, gl, concentration_index) -> vendor_ci
q2 %>%
mutate(gl = fct_lump_n(gl, 30)) %>%
group_by(week, gl) %>%
summarise(vendors = sum(vendor_qty)) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = vendors))+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "# Of Vendors Supplying POs for Amazon",
x = "Week",
y = "")
q2 %>%
mutate(gl = fct_lump(gl, n = 30)) %>%
filter(year(order_datetime) == 2020,
order_datetime <= Sys.Date()-10) %>%
group_by(week, gl) %>%
summarise(ordered = sum(amazon_ordered_qty),
confirmed = sum(vendor_qty_confirmed)) %>%
mutate(conf_rate = confirmed/ordered) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = conf_rate), size = 1)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Confirmation Rate per GL",
subtitle = "Top 15 GLs purchased",
y = "",
x = "Week")
q2 %>%
mutate(gl = fct_lump(gl, n = 30)) %>%
filter(year(order_datetime) == 2020,
order_datetime <= Sys.Date()-10) %>%
group_by(week, gl) %>%
summarise(ordered = sum(amazon_ordered_qty),
confirmed = sum(vendor_qty_confirmed)) %>%
mutate(conf_rate = confirmed/ordered) %>%
head()
q2 %>%
mutate(gl = fct_lump(gl, n = 30)) %>%
filter(year(order_datetime) == 2020,
order_datetime <= Sys.Date()-10) %>%
group_by(week, gl) %>%
summarise(ordered = sum(amazon_ordered_qty),
confirmed = sum(vendor_qty_confirmed)) %>%
mutate(conf_rate = confirmed/ordered) %>%
inner_join(vendor_ci, by = c("week" = "week", "gl" = "gl")) %>%
head()
q2 %>%
mutate(gl = fct_lump(gl, n = 30)) %>%
filter(year(order_datetime) == 2020,
order_datetime <= Sys.Date()-10) %>%
group_by(week, gl) %>%
summarise(ordered = sum(amazon_ordered_qty),
confirmed = sum(vendor_qty_confirmed)) %>%
mutate(conf_rate = confirmed/ordered) %>%
inner_join(vendor_ci, by = c("week" = "week", "gl" = "gl")) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = week, y = concentration_index, color = "ci"))+
geom_line(mapping = aes(x = week, y = conf_rate, color = "cr"))+
scale_y_continuous(labels = scales::percent)+
scale_color_manual(values = c("ci" = "steel blue",
"cr" = "dark orange"),
name = "legend")+
theme_graph()+
facet_wrap(~gl)+
labs(title = "Vendor concentration Index (from 0 to 10.000)",
x = "Week",
y = "Concentration Index")
q6 %>%
mutate(gl = fct_lump(gl_product_group_desc, 30)) %>%
mutate(cr_group = fct_relevel(cr_group, levels = c("cr_below_20p","cr_below_40p","cr_below_60p","cr_below_80p","cr_above_80p"))) %>%
group_by(week, cr_group, gl) %>%
summarise(ordered = sum(amazon_ordered_qty)) %>%
filter(!is.na(gl)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = week, y = ordered, fill = cr_group), position = "fill")+
scale_fill_brewer(type = "qual", palette = 3)+
theme_graph()+
facet_wrap(~gl)
q6 %>%
mutate(gl = fct_lump(gl_product_group_desc, 30)) %>%
filter(gl != "Other") %>%
mutate(cr_group = fct_relevel(cr_group, levels = c("cr_below_20p","cr_below_40p","cr_below_60p","cr_below_80p","cr_above_80p"))) %>%
group_by(week, cr_group, gl) %>%
summarise(ordered = sum(amazon_ordered_qty)) %>%
filter(!is.na(gl)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = week, y = ordered, fill = cr_group), position = "fill")+
scale_fill_brewer(type = "qual", palette = 3)+
theme_graph()+
facet_wrap(~gl)
q6 %>%
mutate(gl = fct_lump(gl_product_group_desc, 30)) %>%
filter(gl != "Other") %>%
mutate(cr_group = fct_relevel(cr_group, levels = c("cr_below_20p","cr_below_40p","cr_below_60p","cr_below_80p","cr_above_80p"))) %>%
group_by(week, cr_group, gl) %>%
summarise(ordered = sum(amazon_ordered_qty)) %>%
filter(!is.na(gl)) %>%
ggplot2::ggplot()+
geom_col(mapping = aes(x = week, y = ordered, fill = cr_group), position = "fill")+
scale_fill_brewer(type = "qual", palette = 3)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~gl)
library(GGally)
library(fpp3)
library(fable)
library(tsibble)
library(tsibbledata)
library(feasts)
library(tidyverse)
library(readr)
library(stringr)
library(plotly)
library(patchwork)
library(seasonal)
library(fma)
# Establishing graph theme
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/fppicco/Desktop/R/Projects/forecast_study"
boston_men <- fpp3::boston_marathon %>%
filter(Event == "Men's open division") %>%
head()
boston_men <- fpp3::boston_marathon %>%
filter(Event == "Men's open division") %>%
mutate(Minutes = as.numeric(Time)/60)
boston_men %>%
head()
boston_men %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = Year, y = Minutes))
boston_men %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = Year, y = Minutes))+
geom_smooth(mapping = aes(x = year, y = Minutes), method = "lm", formula = "y ~ x")
boston_men %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = Year, y = Minutes))+
geom_smooth(mapping = aes(x = Year, y = Minutes), method = "lm", formula = "y ~ x")
boston_men %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = Year, y = Minutes))+
geom_smooth(mapping = aes(x = Year, y = Minutes), method = "lm", formula = "y ~ x", se = F)
boston_men %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = Year, y = Minutes))+
geom_smooth(mapping = aes(x = Year, y = Minutes), method = "lm", formula = "y ~ x", se = F, color = "red")
boston_men %>%
head()
boston_men %>%
model(lm(Year ~ Minutes))
boston_men %>%
lm(Year ~ Minutes)
model(lm(boston_men$Year ~ boston_men$Minutes))
lm(boston_men$Year ~ boston_men$Minutes)
model <- lm(boston_men$Year ~ boston_men$Minutes)
class(model)
class(boston_men)
str(boston_men)
model
model$residuals
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = .model)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model, color = "steel blue")
model <- lm(log(boston_men$Year) ~ boston_men$Minutes))
model <- lm(log(boston_men$Year) ~ boston_men$Minutes)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$fitted.values))
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$fitted.values))+
geom_line(mapping = aes(y = boston_men$Minutes))
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$fitted.values), data = model)+
geom_line(mapping = aes(y = boston_men$Minutes))
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)+
geom_line(mapping = aes(y = boston_men$Minutes))
boston_men %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = Year, y = Minutes))+
geom_smooth(mapping = aes(x = Year, y = Minutes), method = "lm", formula = "y ~ x", se = F, color = "red")
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)+
geom_line(mapping = aes(y = boston_men$Minutes))
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model, color = "steel blue")
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)
model <- lm(boston_men$Year ~ boston_men$Minutes)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model, color = "steel blue")
model <- lm(log(boston_men$Year) ~ boston_men$Minutes)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)
model %>%
feasts::gg_tsresiduals()
model
model$residuals %>%
feasts::gg_tsresiduals()
class(model)
as_mable(model)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model)
ggplot2::ggplot(mapping = aes(x = boston_men$Year))+
geom_line(mapping = aes(y = model$residuals), data = model, color = "steel blue")
fit_tends <- boston_men %>%
model(
linear = TSLM(Minutes ~ tren()),
exponential = TSLM(log(Minutes) ~ trend()),
picewise = TSLM(Minutes ~ trend(knots = c(1940, 1980)))
)
fit_tends <- boston_men %>%
model(
linear = TSLM(Minutes ~ trend()),
exponential = TSLM(log(Minutes) ~ trend()),
picewise = TSLM(Minutes ~ trend(knots = c(1940, 1980)))
)
fit_trends <- boston_men %>%
model(
linear = TSLM(Minutes ~ trend()),
exponential = TSLM(log(Minutes) ~ trend()),
picewise = TSLM(Minutes ~ trend(knots = c(1940, 1980)))
)
fc_trends <- fit_trends %>%
forecast::forecast(h = 10)
boston_men %>% str()
boston_men %>% tsibble::as_tsibble(index = Year)
boston_men %>% str()
fit_trends <- boston_men %>%
model(
linear = TSLM(Minutes ~ trend()),
exponential = TSLM(log(Minutes) ~ trend()),
picewise = TSLM(Minutes ~ trend(knots = c(1940, 1980)))
)
fc_trends <- fit_trends %>%
forecast::forecast(h = 10)
boston_men %>%
forecast::autoplot(Minutes)+
geom_line(mapping = aes(y = .fitted, color = .model), data = fitted(fit_trends))+
forecast::autolayer(fc_trends, aplha = .5, level = 95)
library(GGally)
library(fpp3)
library(fable)
library(tsibble)
library(tsibbledata)
library(feasts)
library(tidyverse)
library(readr)
library(stringr)
library(plotly)
library(patchwork)
library(seasonal)
library(fma)
# Establishing graph theme
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/fppicco/Desktop/R/Projects/forecast_study"
algeria_economy <-
tsibbledata::global_economy %>%
filter(Country == "Algeria")
fit <- algeria_economy %>%
model(ETS(Exports ~ error("A") + trend("N") + season("N"), opt_crit = "mse"))
fit
fit$`ETS(Exports ~ error("A") + trend("N") + season("N"), opt_crit = "mse")`
fit <-
fit %>%
forecast::forecast(h = 5)
fit <- algeria_economy %>%
model(ETS(Exports ~ error("A") + trend("N") + season("N"), opt_crit = "mse"))
fc <-
fit %>%
forecast::forecast(h = 5)
augment(fit)
class(fit)
fit %>% str()
fit %>% head()
fit
fit %>% unlist()
fit %>% as.data.frame()
fit$Country
fit
fit %>% components()
fc %>%
forecast::autoplot(algeria_economy) +
geom_line(mapping = aes(y = .fitted, color = "Fitted"), data = components(fit))
fc %>%
forecast::autoplot(algeria_economy) +
geom_line(mapping = aes(y = .fitted, color = "Fitted"), data = augment(fit))
aus_economy <-
tsibbledata::global_economy %>%
filter(Code == "AUS") %>%
mutate(Pop = Population/1e6)
fit <- aus_economy %>%
model(AAN = ETS(Pop ~ error("A"), trend("A"), season("N")))
aus_economy <-
tsibbledata::global_economy %>%
filter(Code == "AUS") %>%
mutate(Pop = Population/1e6)
fit <- aus_economy %>%
model(AAN = ETS(Pop ~ error("A"), trend("A"), season("N")))
model(AAN = ETS(Pop ~ error("A"), trend("A"), season("N")))
fit <- aus_economy %>%
model(AAN = ETS(Pop ~ error("A") + trend("A") + season("N")))
fc <- fit %>%
forecast::forecast(h = 10)
Example: Australian Population (continued)
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15) %>%
forecast::autoplot(aus_economy, level = NULL)+
ggtitle("Forecasts from Holt's method")+
xlab("Year")+
ylab("Population of Australia (millions)")+
guides(colour = guide_legend(title = "Forecast"))
aus_economy %>%
model(
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N")))
aus_economy %>%
model(
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15)
aus_economy %>%
model(
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15) %>%
forecast::autoplot(aus_economy, level = NULL)
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15) %>%
forecast::autoplot(aus_economy, level = NULL)+
ggtitle("Forecasts from Holt's method")+
xlab("Year")+
ylab("Population of Australia (millions)")
aus_economy %>%
model(
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15) %>%
forecast::autoplot(aus_economy, level = NULL)+
ggtitle("Forecasts from Holt's method")
aus_economy %>%
model(
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15) %>%
forecast::autoplot(aus_economy, level = NULL)+
ggtitle("Forecasts from Holt's method")+
xlab("Year")
aus_economy %>%
model(
"Holt's method" = ETS(Pop ~ error("A") + trend("A") + season("N")),
"Damped Holt" = ETS(Pop ~ error("A") + trend("Ad", phi = 0.9) + season("N"))) %>%
forecast::forecast(h = 15) %>%
forecast::autoplot(aus_economy, level = NULL)+
ggtitle("Forecasts from Holt's method")+
xlab("Year")+
ylab("Population of Australia (millions)")
aus_holidays <-
tsibble::tourism %>%
filter(Purpose == "Holiday") %>%
summarise(Trips = sum(Trips))
fit <- aus_holidays %>%
model(
additive = ETS(Trips ~ error("A") + trend("A") + season("A")),
multiplicative = ETS(Trips ~ error("M") + trend("M") + season("M"))
)
fc <- fit %>%
forecast::forecast(h = "3 years")
fc <- fit %>%
forecast::forecast(h = "3 Years")
fc <- fit %>%
forecast::forecast(h = "3 years")
fc %>%
forecast::autoplot(aus_holidays, level = NULL)+
xlab("Year")+
ylab("Overnight trips (millions)")+
scale_color_brewer(type = "qual", palette = "Dark2")
setwd("C:/Users/fppicco/Desktop/R/Github/franciscopiccolo.github.io")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
