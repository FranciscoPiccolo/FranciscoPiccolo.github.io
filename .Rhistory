filter(Purpose == "Holiday") %>%
summarise(Trips = sum(Trips))
fit <- aus_holidays %>%
model(
additive = ETS(Trips ~ error("A") + trend("A") + season("A")),
multiplicative = ETS(Trips ~ error("M") + trend("M") + season("M"))
)
fc <- fit %>%
forecast::forecast(h = "3 years")
fc <- fit %>%
forecast::forecast(h = "3 Years")
fc <- fit %>%
forecast::forecast(h = "3 years")
fc %>%
forecast::autoplot(aus_holidays, level = NULL)+
xlab("Year")+
ylab("Overnight trips (millions)")+
scale_color_brewer(type = "qual", palette = "Dark2")
library(tidyverse)
library(zoo)
library(rJava)
library(RJDBC)
library(readr)
library(patchwork)
library(data.table)
# Establishing graph theme
theme_graph <- function(){
theme(
plot.title = element_text(size = 14),
plot.subtitle = element_text(size = 10),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/fppicco/Desktop/R/Business_Research/"
folder <- "share_single_unit_nwa_per_fc/"
query_path <- paste(path,folder,"queries", sep = "")
dataset_path <- paste(path,folder,"datasets", sep = "")
db_variables <- read.table(file = "C:\\Users\\fppicco\\Desktop\\R\\dw_access\\brscdb.txt",
sep = " ")
sprint <- db_variables[1,2]
driver_class <- db_variables[2,2]
host <- db_variables[3,2]
dw <- db_variables[4,2]
port <- db_variables[5,2]
user <- db_variables[6,2]
pswd <- db_variables[7,2]
driver <- RJDBC::JDBC(driverClass = driver_class,
classPath = Sys.glob("C:/Users/fppicco/Desktop/R/Java/RedshiftJDBC42-no-awssdk-1.2.43.1067.jar"),
identifier.quote="`")
db_connection <- sprintf(sprint, host, port, dw)
access <- RJDBC::dbConnect(driver, db_connection, user, pswd)
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1 <- readr::read_rds(paste(dataset_path,"query_1.RDS", sep = "/"))
q1
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1 <- RJDBC::dbGetQuery(access,q1)
readr::write_rds(q1,paste(dataset_path,"query_1.RDS", sep = "/"))
q1$date <- lubridate::ymd(q1$date)
q1 %>%
head()
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1 <- RJDBC::dbGetQuery(access,q1)
readr::write_rds(q1,paste(dataset_path,"query_1.RDS", sep = "/"))
q1$date <- lubridate::ymd(q1$date)
q1 %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = single_nwa))+
geom_line(mapping = aes(x = date, y = total_nwa))+
facet_wrap(~warehouse_id)
q1 %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = single_nwa))+
geom_line(mapping = aes(x = date, y = total_nwa))+
facet_wrap(~warehouse_id, scales = "free_y")
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single))+
facet_wrap(~warehouse_id, scales = "free_y")
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id))+
```
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id))
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()+
facet_grid(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()+
facet_wrap(~warehouse_id)
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1 <- RJDBC::dbGetQuery(access,q1)
readr::write_rds(q1,paste(dataset_path,"query_1.RDS", sep = "/"))
q1$date <- lubridate::ymd(q1$date)
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()+
theme_graph()+
facet_wrap(~warehouse_id)
facet_wrap(~warehouse_id)
rm(list = ls())
db_variables <- read.table(file = "C:\\Users\\fppicco\\Desktop\\R\\dw_access\\brscdb.txt",
sep = " ")
sprint <- db_variables[1,2]
driver_class <- db_variables[2,2]
host <- db_variables[3,2]
dw <- db_variables[4,2]
port <- db_variables[5,2]
user <- db_variables[6,2]
pswd <- db_variables[7,2]
driver <- RJDBC::JDBC(driverClass = driver_class,
classPath = Sys.glob("C:/Users/fppicco/Desktop/R/Java/RedshiftJDBC42-no-awssdk-1.2.43.1067.jar"),
identifier.quote="`")
db_connection <- sprintf(sprint, host, port, dw)
access <- RJDBC::dbConnect(driver, db_connection, user, pswd)
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1 <- RJDBC::dbGetQuery(access,q1)
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
library(tidyverse)
library(zoo)
library(rJava)
library(RJDBC)
library(readr)
library(patchwork)
library(data.table)
# Establishing graph theme
theme_graph <- function(){
theme(
plot.title = element_text(size = 14),
plot.subtitle = element_text(size = 10),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/fppicco/Desktop/R/Business_Research/"
folder <- "share_single_unit_nwa_per_fc/"
query_path <- paste(path,folder,"queries", sep = "")
dataset_path <- paste(path,folder,"datasets", sep = "")
# Query 1
q1 <- readr::read_file(paste(query_path,"query_1.sql", sep = "/"))
q1 <- RJDBC::dbGetQuery(access,q1)
readr::write_rds(q1,paste(dataset_path,"query_1.RDS", sep = "/"))
q1$date <- lubridate::ymd(q1$date)
q1 %>%
mutate(share_single = single_nwa/total_nwa) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
head()
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, group = warehouse_id, color = warehouse_id))+
geom_line(mapping = aes(x = date, y = share_single_shipped, group = warehouse_id, color = warehouse_id))+
scale_color_viridis_d()+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single))+
geom_line(mapping = aes(x = date, y = share_single_shipped))+
scale_color_viridis_d()+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
head()
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scale::percent)+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
filter(date >= Sys.Date()-10) %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
geom_vline(xintercept = as.Date("2020-10-23"))+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
geom_vline(xintercept = as.Date("2020-10-23"), lty = 2, alpha = .2)+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
geom_vline(xintercept = as.Date(c("2020-10-13","2020-10-14")), lty = 2, alpha = .2)+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~warehouse_id)
q1 %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
ggplot2::ggplot()+
geom_line(mapping = aes(x = date, y = share_single, color = "single NWA"))+
geom_line(mapping = aes(x = date, y = share_single_shipped, color = "single Shipped"))+
geom_vline(xintercept = as.Date(c("2020-10-13","2020-10-14")), lty = 2, alpha = .2)+
scale_color_manual(values = c("single NWA" = "steel blue",
"single Shipped" = "dark orange"))+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
facet_wrap(~warehouse_id)+
labs(title = "% Single NWA and Shipped",
y = "% Single over total",
caption = "Dached line = Prime day")
q1 %>%
filter(date >= Sys.Date()-30) %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
View()
q1 %>%
filter(date >= Sys.Date()-30,
warehouse_id == "GRU5") %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
View()
q1 %>%
filter(date >= Sys.Date()-50,
warehouse_id == "GRU5") %>%
mutate(share_single = single_nwa/total_nwa,
share_single_shipped = single_shipped/total_shipped) %>%
View()
rm(list = ls())
library(GGally)
library(fpp3)
library(fable)
library(tsibble)
library(tsibbledata)
library(feasts)
library(tidyverse)
library(readr)
library(stringr)
library(plotly)
library(patchwork)
library(seasonal)
library(fma)
# Establishing graph theme
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/fppicco/Desktop/R/Projects/forecast_study"
y <- tsibble::tsibble(Year = 2015:2019, Observation = c(123,39,78,52,110), index = Year)
tsibbledata::PBS %>%
filter(ATC2 == "A10") %>%
select(Month, Concession, Type, Cost) %>%
dplyr::summarise(TotalC = sum(Cost))
library(GGally)
library(fpp3)
library(fable)
library(tsibble)
library(tsibbledata)
library(feasts)
library(tidyverse)
library(readr)
library(stringr)
library(plotly)
library(patchwork)
library(seasonal)
library(fma)
# Establishing graph theme
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/fppicco/Desktop/R/Projects/forecast_study"
google_2015 %>%
mutate(diff_close = tsibble::difference(Close)) %>%
head()
google_2015 <- google_stock %>% filter(year(Date) == 2015)
google_2015 %>%
mutate(diff_close = tsibble::difference(Close)) %>%
head()
google_2015 <- google_stock %>% filter(year(Date) == 2015)
google_stock <- gafa_stock %>%
filter(Symbol == "GOOG") %>%
mutate(day = row_number()) %>%
update_tsibble(index = day, regular = TRUE)
# Filter the year of interest
google_2015 <- google_stock %>% filter(year(Date) == 2015)
google_2015 %>%
mutate(diff_close = tsibble::difference(Close)) %>%
head()
google_2015 %>%
mutate(diff_close = tsibble::difference(Close)) %>%
fabletools::features(diff_close, ljung_box, lag = 10)
PBS %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(differences(log(Cost), 12),1)
) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(differences(log(Cost), 12),1)
) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(difference(log(Cost), 12),1)
) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(difference(log(Cost), 12),1)
) %>%
tidyr::gather("Type", "Sales", !!!syms(measured_vars(.)), factor_key = T) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(difference(log(Cost), 12),1)
) %>%
hEAD()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(difference(log(Cost), 12),1)
) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(difference(log(Cost), 12),1)
) %>%
tidyr::gather("Type", "Sales", !!!syms(measured_vars(.)), factor_key = T) %>%
head()
PBS %>%
filter(ATC2 == "H02") %>%
summarise(Cost = sum(Cost)/1e6) %>%
transmute(
"Sales ($million)" = Cost,
"Log Sales" = log(Cost),
"Annual Change in log sales" = difference(log(Cost), 12),
"Doubly Differenced log sales" = difference(difference(log(Cost), 12),1)
) %>%
tidyr::gather("Type", "Sales", !!!syms(measured_vars(.)), factor_key = T) %>%
ggplot2::ggplot(mapping = aes(x = Month, y = Sales))+
geom_line()+
facet_grid(vars(Type), scales = "free_y")+
labs(title = "Corticosteroid drug sales",
x = "Year",
y = NULL)
setwd("C:/Users/fppicco/Desktop/R/Github/franciscopiccolo.github.io")
blogdown::serve_site()
blogdown::stop_server()
