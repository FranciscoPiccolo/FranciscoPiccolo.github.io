query_1$sale_date <- lubridate::ymd(query_1$sale_date)
query_1 %>%
mutate(fk_company = as.factor(fk_company)) %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = answer_rate, group = fk_company, color = fk_company))+
scale_y_continuous(labels = scales::percent)+
scale_color_brewer(type = "qual")+
theme_graph()+
theme(legend.position = "none")+
facet_wrap(~fk_company)+
labs(title = "Sucess Page Answer Rate",
y = "% GTV scored",
caption = "GTV not cancelled and not not invalid")
query_1 %>%
mutate(fk_company = as.factor(fk_company)) %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = answer_rate, group = fk_company, color = fk_company))+
scale_y_continuous(labels = scales::percent)+
scale_color_brewer(type = "qual")+
theme_graph()+
theme(legend.position = "none")+
facet_wrap(~fk_company)+
labs(title = "Sucess Page Answer Rate",
y = "% GTV scored",
x = "",
caption = "GTV not cancelled and not not invalid")
install.packages("patchwork")
library(tidyverse)
library(Amelia)
library(gridExtra)
library(plot3D)
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
text = element_text(family = "Times New Roman"),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
path <- "C:/Users/francisco.piccolo/Desktop/R/franciscopiccolo.github.io/datasets/livro-econometria-basica-gujarati/"
tbl_3.6 <- read.table(file = paste(path,"tabela_3.6_wage_and_productivity.txt",sep = ""),
sep = " ",
header = T,
dec = ",")
tbl_3.6 %>%
tidyr::gather("production","prod",2:3) %>%
tidyr::gather("wage","wag",2:3) %>%
ggplot()+
geom_point(mapping = aes(x = prod, y = wag, color = production))+
geom_smooth(mapping = aes(x = prod, y = wag),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
scale_color_brewer(type = "qual")+
theme_graph()+
labs(title = "Production index and hourly wages",
x = "Production",
y = "Wage")
tbl_3.6 %>%
tidyr::gather("production","X",2:3) %>%
tidyr::gather("wage","Y",2:3) -> df_tbl_3.6
lm(Y~X, data = df_tbl_3.6) %>%
summary()
tbl_3.7 <- read.table(file =
paste(path,"tabela_3.7_gold_nyse_cpi.txt",sep = ""),
sep = " ",
header = T,
dec = ",")
# Sample from dataset
tbl_3.7[sample(nrow(tbl_3.7),5), ] %>%
as.tibble()
tbl_3.7 %>%
transmute(x = gold,
y = nyse,
z = cpi) -> df_test
x <- df_test$x
y <- df_test$y
z <- df_test$z
plot3D::scatter3D(x, y, z,
colvar = NULL,
add = FALSE,
col = "blue",
pch = 19,
phi = 20,
theta = 20,
cex = .9,
bty = "b2",
expand = .9,
col.grid = "darkblue",
col.panel = "steelblue",
colkey = T,
main = "Table 3.7 data",
xlab = "gold_price",
ylab = "nyse_index",
zlab = "ipc_index")
plot3D::scatter3D(x, y, z,
colvar = NULL,
add = FALSE,
col = "blue",
pch = 19,
phi = 20,
theta = 20,
cex = .9,
bty = "b2",
expand = .9,
col.grid = "darkblue",
col.panel = "steelblue",
colkey = T,
main = "Table 3.7 data",
xlab = "gold",
ylab = "nyse",
zlab = "cpi")
# Adjusting the dataset to take the profitability of each asset
tbl_3.7 %>%
mutate(gold_price_var = round(gold/lag(gold, 1, default = NA), digits = 8)-1,
nyse_index_var = round(nyse/lag(nyse, 1, default = NA), digits = 8)-1,
ipc_index_var = round(cpi/lag(cpi, 1, default = NA), digits = 8)-1) %>%
filter(!is.na(gold_price_var)) -> tbl_3.7_df_adj
# Adjusting the dataset to take the profitability of each asset
tbl_3.7 %>%
mutate(gold_price_var = round(gold/lag(gold, 1, default = NA), digits = 8)-1,
nyse_index_var = round(nyse/lag(nyse, 1, default = NA), digits = 8)-1,
ipc_index_var = round(cpi/lag(cpi, 1, default = NA), digits = 8)-1) %>%
filter(!is.na(gold)) -> tbl_3.7_df_adj
g1 <-
tbl_3.7_df_adj %>%
ggplot()+
geom_point(mapping = aes(x = ipc_index_var, y = nyse_index_var), color = "dark orange")+
geom_smooth(mapping = aes(x = ipc_index_var, y = nyse_index_var),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
expand_limits(x = 0, y = 0)+
scale_x_continuous(labels = scales::percent)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
theme(title = element_text(size = 8))+
labs(title = "NYSE vs CPI",
x = "CPI index variation",
y = "NYSE index variation")
g2 <-
tbl_3.7_df_adj %>%
ggplot()+
geom_point(mapping = aes(x = ipc_index_var, y = gold_price_var), color = "dark orange")+
geom_smooth(mapping = aes(x = ipc_index_var, y = gold_price_var),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
expand_limits(x = 0, y = 0)+
scale_x_continuous(labels = scales::percent)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
theme(title = element_text(size = 8))+
labs(title = "Gold Price vs CPI",
x = "CPI index variation",
y = "Gold price variation")
gridExtra::grid.arrange(g1,g2,ncol = 2)
g1 <-
tbl_3.7_df_adj %>%
ggplot()+
geom_point(mapping = aes(x = ipc_index_var, y = nyse_index_var))+
geom_smooth(mapping = aes(x = ipc_index_var, y = nyse_index_var),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
expand_limits(x = 0, y = 0)+
scale_x_continuous(labels = scales::percent)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
theme(title = element_text(size = 8))+
labs(title = "NYSE vs CPI",
x = "CPI index variation",
y = "NYSE index variation")
g2 <-
tbl_3.7_df_adj %>%
ggplot()+
geom_point(mapping = aes(x = ipc_index_var, y = gold_price_var))+
geom_smooth(mapping = aes(x = ipc_index_var, y = gold_price_var),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
expand_limits(x = 0, y = 0)+
scale_x_continuous(labels = scales::percent)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
theme(title = element_text(size = 8))+
labs(title = "Gold Price vs CPI",
x = "CPI index variation",
y = "Gold price variation")
g1 + g2
library(patchwork)
g1 <-
tbl_3.7_df_adj %>%
ggplot()+
geom_point(mapping = aes(x = ipc_index_var, y = nyse_index_var))+
geom_smooth(mapping = aes(x = ipc_index_var, y = nyse_index_var),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
expand_limits(x = 0, y = 0)+
scale_x_continuous(labels = scales::percent)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
theme(title = element_text(size = 8))+
labs(title = "NYSE vs CPI",
x = "CPI index variation",
y = "NYSE index variation")
g2 <-
tbl_3.7_df_adj %>%
ggplot()+
geom_point(mapping = aes(x = ipc_index_var, y = gold_price_var))+
geom_smooth(mapping = aes(x = ipc_index_var, y = gold_price_var),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
expand_limits(x = 0, y = 0)+
scale_x_continuous(labels = scales::percent)+
scale_y_continuous(labels = scales::percent)+
theme_graph()+
theme(title = element_text(size = 8))+
labs(title = "Gold Price vs CPI",
x = "CPI index variation",
y = "Gold price variation")
g1 + g2
tbl_5.5 <-
read.table(file = paste(path,"tabela_5.5_wage_and_college_expenditures.txt", sep = ""),
sep = " ",
header = T,
dec = ".")
# Dataset sample
tbl_5.5[sample(nrow(tbl_5.5),5), ] %>%
as.tibble()
tbl_5.5 %>%
lm(formula = wage~expense) %>%
summary()
0.003308-3
(0.003308-3)/0.0003117
abs((0.003308-3)/0.0003117)
(1-(pt(9614, 49)*2))
(1-pt(9614, 49))*2
tbl_5.5 %>%
lm(formula = wage ~ expense) %>%
summary()
0.003308/0.0003117
(1-pt(0.003308/0.0003117, 49))*2
# Dataset sample
tbl_3.7[sample(nrow(tbl_1.3),10), ] %>%
as.tibble()
# Table 6.7
df <-
data.frame(y = c(86,79,76,69,65,62,52,51,51,48),
x = c(3,7,12,17,25,35,45,55,70,120))
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
theme_graph()+
labs(title = "Reciprocal regression model")
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "100/(100-y) ~ I(1/x)",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "y ~ I(1/x)",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "(100/(100-y)) ~ I(1/x)",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
# Gerando o modelo de regressão recíproco
df %>%
lm(formula = "y ~ I(1/x)") %>%
summary()
# Gerando o modelo de regressão recíproco
df %>%
lm(formula = "100/(100-y) ~ I(1/x)") %>%
summary()
# Table 6.7
df <-
data.frame(y = c(86,79,76,69,65,62,52,51,51,48),
x = c(3,7,12,17,25,35,45,55,70,120))
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "100/(100-y) ~ I(1/x)",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
# Gerando o modelo de regressão recíproco
df %>%
lm(formula = "100/(100-y) ~ I(1/x)") %>%
summary()
(2.06*100)
100-206
(100-206)/2.06
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "100/(100-y) ~ I(1/x)",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "100/(100-y) ~ I(1/x)",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
df %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y =y),
formula = "y ~ I(1/x)",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()+
labs(title = "Reciprocal regression model")
# Gerando o modelo de regressão recíproco
df %>%
lm(formula = "y ~ I(1/x)") %>%
summary()
# Random dataset
df <- data.frame(y = rnorm(100, 10, 3),
z = rnorm(100, 25, 5))
g1 <- df %>%
mutate(x = y + z) %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y = y),
formula = "y ~ x",
method = "lm")+
theme_graph()
g2 <- df %>%
mutate(x = y + z) %>%
ggplot()+
geom_point(mapping = aes(x = x, y = z))+
geom_smooth(mapping = aes(x = x, y = z),
formula = "y ~ x",
method = "lm")+
theme_graph()
gridExtra::grid.arrange(g1,g2, ncol = 2)
g1 + g2
g1 <- df %>%
mutate(x = y + z) %>%
ggplot()+
geom_point(mapping = aes(x = x, y = y))+
geom_smooth(mapping = aes(x = x, y = y),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()
g2 <- df %>%
mutate(x = y + z) %>%
ggplot()+
geom_point(mapping = aes(x = x, y = z))+
geom_smooth(mapping = aes(x = x, y = z),
formula = "y ~ x",
method = "lm",
se = F,
lty = 2,
color = "dark orange")+
theme_graph()
g1 + g2
df %>%
mutate(x = y + z) %>%
lm(formula = "y ~ x") %>%
summary()
df %>%
mutate(x = y + z) %>%
lm(formula = "z ~ x") %>%
summary()
setwd(dir = "C:/Users/francisco.piccolo/Desktop/R/franciscopiccolo.github.io")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
rm(list = ls())
library(rJava)
library(RJDBC)
library(tidyverse)
library(knitr)
library(zoo)
theme_graph <- function(){
theme(
plot.title = element_text(size = 10),
plot.subtitle = element_text(size = 6.5),
plot.caption = element_text(face = "italic", size = 6),
axis.text = element_text(size = 6),
axis.title = element_text(face = "italic", size = 6),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold", size = 4.5),
legend.title = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 5.5)
)
}
graph_color <- "#00AFA4"
graph_color_2 <- "#222222"
graph_color_3 <- "dark orange"
library(tidyquant)
library(tidyverse)
library(patchwork)
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
text = element_text(family = "Times New Roman"),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
rm(list = rm())
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
text = element_text(family = "Times New Roman"),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
blogdown::serve_site()
blogdown::stop_server()
2^64
2020-2016
4*12
1/48
200/100
(1+2)^(1/48)
(1-(1+2)^(1/48))*100
(1+2)^(1/48))
(1+2)^(1/48)
(1+2)^(1/48)-1
((1+2)^(1/48)-1)*100
0.5/100
(1+(0.5/100))^12
(((1+(0.5/100))^12)-1)*100
(((1+(4.16/100))^48)-1)*100
(((1+(0.6/100))^48)-1)*100
6*12
(6*12)+7
blogdown::serve_site()
blogdown::stop_server()
