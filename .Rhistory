ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_cancel_rate), color = graph_color)+
geom_hline(yintercept = .2, lty = 2, color = "dark orange")+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
labs(title = "Cancel rate for selected brands",
x = "",
y = "",
caption = "20 days moving average")
query_19 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_share_sliper), color = graph_color)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
labs(title = "Sliper share on selected brand gtv",
subtitle = "Only slipers with more than R$100.000 in GTV canceled on the past three years",
x = "",
y = "% GTV purchased by Slipers",
caption = "20 days moving average")
query_10 %>%
filter(sale_date <= Sys.Date()-2) %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = concentration_index_normal_customer, color = "normal customer index"), size = line_size)+
geom_line(mapping = aes(x = sale_date, y = concentration_index_sliper, color = "sliper index"), size = line_size)+
scale_color_manual(values = c("normal customer index" = graph_color,
"sliper index" = graph_color_2))+
theme_graph()+
labs(title = "Brand concentration index segmented by customer type",
x = "",
y = "Brand concentration index")
query_9 %>%
ggplot()+
geom_point(mapping = aes(x = brand_share_normal_customer, y = brand_share_sliper), shape = 20, color = graph_color)+
geom_text(mapping = aes(x = brand_share_normal_customer, y = brand_share_sliper, label = brand), check_overlap = T, size = 2.9, nudge_y = 0.002)+
geom_abline(lty = 2, color = graph_color_3)+
scale_y_continuous(labels = scales::percent, breaks = seq(0, 15, by = 0.03))+
scale_x_continuous(labels = scales::percent, breaks = seq(0, 15, by = 0.03))+
expand_limits(x = 0.15, y = 0.15)+
theme_graph()+
labs(title = "Revenue distribution between brands for normal customers and Slipers",
subtitle = "Farther from the yellow line, more concentrated is the purchase",
x = "Revenue distribution between brands for normal customers",
y = "Revenue distribution between brands for Slipers",
caption = "Last 30 days,
Retail products only")
mtcars %>% head()
library(tidyverse)
mtcars %>% head()
geom_point(mapping = aes(x = disp, y = mpg)
mtcars %>%
ggplot()+
geom_point(mapping = aes(x = disp, y = mpg))
mtcars %>%
ggplot()+
geom_point(mapping = aes(x = hp, y = mpg))
#readr::write_rds(query_1,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_1.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_1.RDS") -> query_1
#readr::write_rds(query_2,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_2.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_2.RDS") -> query_2
#readr::write_rds(query_3,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_3.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_3.RDS") -> query_3
#readr::write_rds(query_4,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_4.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_4.RDS") -> query_4
#readr::write_rds(query_5,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_5.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_5.RDS") -> query_5
#readr::write_rds(query_6,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_6.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_6.RDS") -> query_6
#readr::write_rds(query_7,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_7.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_7.RDS") -> query_7
#readr::write_rds(query_8,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_8.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_8.RDS") -> query_8
#readr::write_rds(query_9,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_9.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_9.RDS") -> query_9
#readr::write_rds(query_10,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_10.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_10.RDS") -> query_10
#readr::write_rds(query_11,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_11.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_11.RDS") -> query_11
#readr::write_rds(query_12,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_12.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_12.RDS") -> query_12
#readr::write_rds(query_13,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_13.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_13.RDS") -> query_13
#readr::write_rds(query_14,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_14.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_14.RDS") -> query_14
#readr::write_rds(query_15,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_15.RDS")
#readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_15.RDS") -> query_15
#readr::write_rds(query_16,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_16.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_16.RDS") -> query_16
#readr::write_rds(query_17,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_17.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_17.RDS") -> query_17
#readr::write_rds(query_18,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_18.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_18.RDS") -> query_18
#readr::write_rds(query_18,"C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_19.RDS")
readr::read_rds("C:/Users/francisco.piccolo/Desktop/R/02.Data_bases/cancelation_squad/query_19.RDS") -> query_19
query_1$sale_date <- lubridate::ymd(query_1$sale_date)
query_1 %>%
mutate(sale_date,
cancel_rate = roll_avg_cancel_rate,
retail = roll_avg_cancel_rate_retail,
mkt = roll_avg_cancel_rate_mkt) %>%
select(sale_date,
cancel_rate,
retail,
mkt) %>%
ggplot2::ggplot()+
geom_line(aes(x = sale_date, y = cancel_rate, color = "Cancel rate"), size = line_size)+
geom_line(aes(x = sale_date, y = retail, color = "Retail"), size = line_size)+
geom_line(aes(x = sale_date, y = mkt, color = "Mkt"), size = line_size)+
geom_vline(xintercept = as.Date(black_friday), linetype = "dashed", color = "blue", alpha = .3)+
scale_y_continuous(labels = scales::percent)+
scale_color_manual(values = c("Cancel rate" = graph_color,
"Retail" = graph_color_2,
"Mkt" = graph_color_3),
labs(color = ""))+
theme_graph()+
labs(title = "Cancel rate time series",
x = "",
y = "% GTV canceled",
caption = "20 days moving average")
library(rJava)
library(RJDBC)
library(extrafont)
library(tidyverse)
library(gridExtra)
library(zoo)
library(knitr)
library(scales)
library(ggthemes)
theme_graph <- function(){
theme(
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(face = "italic", size = 9),
axis.text = element_text(size = 9),
axis.title = element_text(face = "italic", size = 9),
text = element_text(family = "Times New Roman"),
strip.background = element_rect(fill = "grey"),
strip.text = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom"
)
}
graph_color <- "#00AFA4"
graph_color_2 <- "#222222"
graph_color_3 <- "dark orange"
line_size <- 1
black_friday <- c("2019-11-29","2018-11-23","2017-11-24")
query_1$sale_date <- lubridate::ymd(query_1$sale_date)
query_1 %>%
mutate(sale_date,
cancel_rate = roll_avg_cancel_rate,
retail = roll_avg_cancel_rate_retail,
mkt = roll_avg_cancel_rate_mkt) %>%
select(sale_date,
cancel_rate,
retail,
mkt) %>%
ggplot2::ggplot()+
geom_line(aes(x = sale_date, y = cancel_rate, color = "Cancel rate"), size = line_size)+
geom_line(aes(x = sale_date, y = retail, color = "Retail"), size = line_size)+
geom_line(aes(x = sale_date, y = mkt, color = "Mkt"), size = line_size)+
geom_vline(xintercept = as.Date(black_friday), linetype = "dashed", color = "blue", alpha = .3)+
scale_y_continuous(labels = scales::percent)+
scale_color_manual(values = c("Cancel rate" = graph_color,
"Retail" = graph_color_2,
"Mkt" = graph_color_3),
labs(color = ""))+
theme_graph()+
labs(title = "Cancel rate time series",
x = "",
y = "% GTV canceled",
caption = "20 days moving average")
query_2$sale_date <- lubridate::ymd(query_2$sale_date)
query_2 %>%
filter(!payment_method %in% c("online_debit","debit_card")) %>%
select(sale_date,
payment_method,
share_payment_method,
roll_avg_share_payment_method) %>%
mutate(payment_method = fct_reorder(payment_method,share_payment_method, .desc = T)) %>%
ggplot()+
geom_line(aes(x = sale_date, y = share_payment_method, group = payment_method, color = payment_method), alpha = .2)+
geom_line(aes(x = sale_date, y = roll_avg_share_payment_method, group = payment_method, color = payment_method),size = .9)+
geom_vline(xintercept = as.Date(black_friday), linetype = "dashed", color = "blue", alpha = .3)+
scale_y_continuous(labels = scales::percent)+
scale_color_manual(values = c(graph_color, graph_color_2, graph_color_3, "grey"))+
theme_graph()+
labs(title = "Revenue distribution time series",
x = "",
y = "",
caption = "20 days moving average")
query_3 %>%
mutate(payment_method = fct_reorder(payment_method, share_gtv_canceled)) %>%
ggplot(aes(x = payment_method, y = share_gtv_canceled))+
geom_col(fill = graph_color)+
scale_y_continuous(labels = scales::percent, breaks = seq(0, 1, by = 0.1))+
theme_graph()+
coord_flip()+
labs(title = "Canceled GTV distribution between payment methods",
x = "",
y = "")
query_4$sale_date <- lubridate::ymd(query_4$sale_date)
query_4 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = roll_avg_share_sliper_over_total_gtv, color = "total_gtv"), size = 1)+
geom_line(mapping = aes(x = sale_date, y = roll_avg_share_sliper_over_gtv_boleto, color = "banking_billet"), size = 1)+
scale_y_continuous(labels = scales::percent)+
scale_color_manual(values = c("total_gtv" = graph_color,
"banking_billet" = graph_color_2))+
theme_graph()+
labs(title = "Revenue share from Slipers",
subtitle = "Total Revenue and Banking Billet Revenue",
x = "",
y = "",
caption = "20 days roll average")
query_5$sale_date <- lubridate::ymd(query_5$sale_date)
query_5 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = cancel_rate, color = "Total cancel rate"), size = line_size)+
geom_line(mapping = aes(x = sale_date, y = cancel_rate_normal_customer, color = "Cancel rate normal customer"), size = line_size)+
geom_line(mapping = aes(x = sale_date, y = cancel_rate_sliper, color = "Cancel rate sliper"), size = line_size)+
scale_y_continuous(labels = scales::percent, breaks = c(seq(0, 0.4, by = 0.05)))+
scale_color_manual(values = c("Total cancel rate" = graph_color,
"Cancel rate normal customer" = graph_color_2,
"Cancel rate sliper" = "dark orange"))+
theme_graph()+
labs(title = "Cancel rate segmented by customer type",
x = "",
y = "",
caption = "20 days moving average")
query_13$sale_date <- lubridate::ymd(query_13$sale_date)
query_13$year_month_account_creation <- paste(query_13$year_month_account_creation, "01", sep = "-")
query_13$year_month_account_creation <- lubridate::ymd(query_13$year_month_account_creation)
query_13 %>%
filter(customer_name != "NA") %>%
distinct(year_month_account_creation, customer_name) %>%
mutate(qty = 1) %>%
group_by(year_month_account_creation) %>%
summarise(qty = sum(qty)) %>%
ggplot()+
geom_col(mapping = aes(x = year_month_account_creation, y = qty), fill = graph_color)+
scale_x_date(breaks = "24 months")+
theme_graph()+
labs(title = "Account creation by Slipers",
x = "Year and month of creation",
y = "Accounts created in a given month")
query_13 %>%
group_by(sliper_type) %>%
summarise(gtv = sum(gtv)) %>%
mutate("%_gtv" = 100*(round(gtv/sum(gtv), digits = 4))) %>%
select(sliper_type, "%_gtv") -> gtv
query_13 %>%
mutate(sliper_type = fct_relevel(sliper_type, levels = c("light","medium","heavy","critical"))) %>%
distinct(customer_name, sliper_type) %>%
mutate(qty = 1) %>%
group_by(sliper_type) %>%
summarise(qty = sum(qty)) %>%
mutate("%_qty" = 100*(round(qty/sum(qty), digits = 4))) %>%
inner_join(gtv, by = c("sliper_type" = "sliper_type")) %>%
mutate(sliper_type = ifelse(sliper_type == "critical","critial (above 1.000.000)",
ifelse(sliper_type == "heavy","heavy (between 100.001 and 1.000.000)",
ifelse(sliper_type == "medium","medium (between 10.001 and 100.000",
ifelse(sliper_type == "light", "light (up to 10.000 of revenue generation",""))))) %>%
head() %>%
pander::pander()
query_13 %>%
filter(sale_date >= Sys.Date()-365) %>%
group_by(sliper_type) %>%
summarise(gtv = sum(gtv)) %>%
mutate("%_gtv" = 100*(round(gtv/sum(gtv), digits = 4))) %>%
select(sliper_type, "%_gtv") -> gtv
query_13 %>%
filter(sale_date >= Sys.Date()-365) %>%
mutate(sliper_type = fct_relevel(sliper_type, levels = c("light","medium","heavy","critical"))) %>%
distinct(customer_name, sliper_type) %>%
mutate(qty = 1) %>%
group_by(sliper_type) %>%
summarise(qty = sum(qty)) %>%
mutate("%_qty" = 100*(round(qty/sum(qty), digits = 4))) %>%
inner_join(gtv, by = c("sliper_type" = "sliper_type")) %>%
mutate(sliper_type = ifelse(sliper_type == "critical","critial (above 1.000.000)",
ifelse(sliper_type == "heavy","heavy (between 100.001 and 1.000.000)",
ifelse(sliper_type == "medium","medium (between 10.001 and 100.000",
ifelse(sliper_type == "light", "light (up to 10.000 of revenue generation",""))))) %>%
head() %>%
pander::pander()
query_13 %>%
filter(sliper_type %in% c("critical","heavy")) %>%
group_by(sale_date, sliper_type) %>%
summarise(gtv = sum(gtv)) %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = gtv, group = sliper_type, color = sliper_type), size = line_size)+
scale_color_brewer(type = "qual")+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
labs(title = "Critical and Heavy Slipers purchase time series",
x = "",
y = "")
query_13 %>%
filter(sale_date >= Sys.Date()-180) %>%
filter(sliper_type %in% c("critical","heavy")) %>%
mutate(year_month = substr(sale_date,1,7)) %>%
group_by(year_month) %>%
summarise(gtv_sliper = sum(gtv)) %>%
inner_join(query_1 %>%
mutate(year_month = substr(sale_date, 1, 7)) %>%
group_by(year_month) %>%
summarise(gtv = sum(gtv)), by = c("year_month" = "year_month")) %>%
mutate(cancel_rate_impact = 100*round(gtv_sliper/gtv, digits = 4)) %>%
select(year_month, cancel_rate_impact) %>%
arrange(desc(year_month)) %>%
head(10) %>% pander::pander()
query_14 %>%
group_by(partner_name) %>%
summarise(orders_sliper = sum(orders_sliper),
orders_not_sliper = sum(orders_not_sliper)) %>%
mutate(total_sliper = sum(orders_sliper),
total_not_sliper = sum(orders_not_sliper),
share_sliper = 100*round(orders_sliper/total_sliper, digits = 4),
share_not_sliper = 100*round(orders_not_sliper/total_not_sliper, digits = 4)) %>%
select(partner_name, share_sliper, share_not_sliper) %>%
arrange(desc(share_sliper))
query_6$sale_date <- lubridate::ymd(query_6$sale_date)
query_6 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = share_retail, color = "retail"), size = line_size)+
geom_line(mapping = aes(x = sale_date, y = share_mkt, color = "mkt"), size = line_size)+
scale_y_continuous(labels = scales::percent, breaks = seq(0, 100, by = 0.1))+
scale_color_manual(values = c("retail" = graph_color,
"mkt" = graph_color_2))+
theme_graph()+
labs(title = "Sliper revenue divided by marketplace and retail",
x = "",
y = "",
caption = "20 days moving average")
query_7 %>%
filter(gtv >= 50000) %>%
ggplot()+
geom_point(mapping = aes(x = share_sliper, y = gtv), shape = 20, color = graph_color)+
geom_text(mapping = aes(x = share_sliper, y = gtv, label = seller), check_overlap = T, size = 2.5, nudge_y = .003, nudge_x = .05)+
scale_y_continuous(labels = scales::comma)+
scale_x_continuous(labels = scales::percent)+
theme_graph()+
labs(title = "Slipers revenue concentration at Dafiti's Sellers",
x = "Share Sliper",
y = "Revenue",
caption = "Last six months")
query_8$sale_date <- lubridate::ymd(paste(query_8$sale_date, "01",sep = "-"))
query_8 %>%
ggplot()+
geom_col(mapping = aes(x = sale_date, y = concentration_index), fill = graph_color, size = line_size, alpha = .6)+
scale_y_continuous(labels = scales::comma)+
theme_graph()+
labs(title = "Concentration Index for Sliper purchase of Seller products",
subtitle = "Index range: 0 to 10.000",
x = "",
y = "")
query_9 %>%
ggplot()+
geom_point(mapping = aes(x = brand_share_normal_customer, y = brand_share_sliper), shape = 20, color = graph_color)+
geom_text(mapping = aes(x = brand_share_normal_customer, y = brand_share_sliper, label = brand), check_overlap = T, size = 2.9, nudge_y = 0.002)+
geom_abline(lty = 2, color = graph_color_3)+
scale_y_continuous(labels = scales::percent, breaks = seq(0, 15, by = 0.03))+
scale_x_continuous(labels = scales::percent, breaks = seq(0, 15, by = 0.03))+
expand_limits(x = 0.15, y = 0.15)+
theme_graph()+
labs(title = "Revenue distribution between brands for normal customers and Slipers",
subtitle = "Farther from the yellow line, more concentrated is the purchase",
x = "Revenue distribution between brands for normal customers",
y = "Revenue distribution between brands for Slipers",
caption = "Last 30 days,
Retail products only")
query_10$sale_date <- lubridate::ymd(paste(query_10$sale_date, "01", sep = "-"))
query_10 %>%
filter(sale_date <= Sys.Date()-2) %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = concentration_index_normal_customer, color = "normal customer index"), size = line_size)+
geom_line(mapping = aes(x = sale_date, y = concentration_index_sliper, color = "sliper index"), size = line_size)+
scale_color_manual(values = c("normal customer index" = graph_color,
"sliper index" = graph_color_2))+
theme_graph()+
labs(title = "Brand concentration index segmented by customer type",
x = "",
y = "Brand concentration index")
query_18$sale_date <- lubridate::ymd(query_18$sale_date)
query_18 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_brand_share_sliper, group = brand, color = brand))+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
theme_graph()+
theme(legend.position = "none")+
labs(title = "Slipers' spending choices between listed brands",
subtitle = "Only slipers with more than R$100.000 in GTV canceled on the past three years",
x = "",
y = "Budget allocation",
caption = "20 days moving average")
query_19$sale_date <- lubridate::ymd(query_19$sale_date)
query_19 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_share_sliper), color = graph_color)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
labs(title = "Sliper share on selected brand gtv",
subtitle = "Only slipers with more than R$100.000 in GTV canceled on the past three years",
x = "",
y = "% GTV purchased by Slipers",
caption = "20 days moving average")
query_19 %>%
head()
query_19 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_brand_share_sliper), color = graph_color)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
labs(title = "Sliper share on selected brand gtv",
subtitle = "Only slipers with more than R$100.000 in GTV canceled on the past three years",
x = "",
y = "% GTV purchased by Slipers",
caption = "20 days moving average")
query_19 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_cancel_rate), color = graph_color)+
geom_hline(yintercept = .2, lty = 2, color = "dark orange")+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
labs(title = "Cancel rate for selected brands",
x = "",
y = "",
caption = "20 days moving average")
query_19 %>%
head()
query_19 %>%
ggplot()+
geom_line(mapping = aes(x = sale_date, y = avg_brand_share_sliper), color = graph_color)+
scale_y_continuous(labels = scales::percent)+
facet_wrap(~brand)+
labs(title = "Sliper share on selected brand gtv",
subtitle = "Only slipers with more than R$100.000 in GTV canceled on the past three years",
x = "",
y = "% GTV purchased by Slipers",
caption = "20 days moving average")
query_19 %>%
head()
install.packages("brazilmaps")
library(brazilmaps)
brazilmaps::get_brmap(geo = c("Brazil"))
brazilmaps::get_brmap(geo = c("Brazil")) %>% View()
library(tidyverse)
brazilmaps::get_brmap(geo = c("Brazil")) %>% View()
brazilmaps::get_brmap(geo = c("Brazil","Region","State","MesoRegion","MicroRegion","City"),
geo.filter = NULL,
class = c("sf", "SpatialPolygonsDataFrame", "data.frame"))
## Retrieving the map from the State of Rio de Janeiro
rio_map <- get_brmap(geo = "State",
geo.filter = list(State = 33),
class = "sf")
plot_brmap(rio_map)
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 5),
class = "sf")
plot_brmap(cities_map)
rio_map %>% head()
rio_map %>% View()
plot_brmap(rio_map)
plot_brmap(cities_map)
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 1),
class = "sf")
plot_brmap(cities_map)
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 8),
class = "sf")
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 7),
class = "sf")
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 6),
class = "sf")
plot_brmap(cities_map)
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 4),
class = "sf")
plot_brmap(cities_map)
## Obtaining the municipalities maps from Midwest Region
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 3),
class = "sf")
plot_brmap(cities_map)
cities_map <- get_brmap(geo = "City",
geo.filter = list(Region = 3),
class = "data.frame")
cities_map
ggplot(cities_map)+
geom_map(aes(map_id = geometry), map = State)
ggplot(data = cities_map)+
geom_map(aes(map_id = geometry), map = State)
ggplot(data = cities_map)+
geom_map(aes(map_id = geometry))
ggplot(data = cities_map)+
geom_map(aes(map_id = geometry), map = 1)
ggplot(data = cities_map)+
geom_map(aes(map_id = geometry), map = cities_map)
setwd(dir = "C:\Users\francisco.piccolo\Desktop\R\franciscopiccolo.github.io")
setwd(dir = "C:/Users\francisco.piccolo\Desktop\R\franciscopiccolo.github.io")
setwd(dir = "C:/Users/francisco.piccolo/Desktop/R/franciscopiccolo.github.io")
blogdown::serve_site()
